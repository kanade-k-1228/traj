type Query {
  dir(path: String!, showHidden: Boolean, depth: Int): Dir
  file(path: String!): File
}

type Mutation {
  copyItem(src: String!, dst: String!, overwrite: Boolean): CopyResult!
  createDir(path: String!): Dir!
  createFile(path: String!, content: String!): File!
  deleteDir(path: String!): DeleteResult!
  deleteFile(path: String!): DeleteResult!
  moveItem(src: String!, dst: String!, overwrite: Boolean): MoveResult!
  updateFile(path: String!, content: String!): File!
}

union FileSystemEntry = File | Dir

type Dir {
  path: String!
  name: String!
  childs: [FileSystemEntry!]!
}

type File {
  path: String!
  name: String!
  size: Int!
  content: String
}

type CopyResult {
  src: String!
  dst: String!
}

type MoveResult {
  src: String!
  dst: String!
}

type DeleteResult {
  success: Boolean!
  path: String!
}
